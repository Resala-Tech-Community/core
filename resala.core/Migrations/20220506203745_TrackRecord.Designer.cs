// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using resala.core.Persistence.Contexts;

namespace resala.core.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220506203745_TrackRecord")]
    partial class TrackRecord
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.14");

            modelBuilder.Entity("resala.core.Domain.Models.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("resala.core.Domain.Models.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("resala.core.Domain.Models.Committee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("FemaleCapacity")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("MaleCapacity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<ushort>("UniSexCapacity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Committees");
                });

            modelBuilder.Entity("resala.core.Domain.Models.ResponsibleVolunteer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("AcademicYear")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActivityId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ActivityJoinDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("BranchId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CommitteeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DrMeetingQualificationDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("EducationalDegree")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ExitDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExitReason")
                        .HasColumnType("TEXT");

                    b.Property<string>("Faculty")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FemaleRelativeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte>("FemaleRelativeRelation")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FemalteRelativePhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<byte>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Graduated")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("GraduationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("GraduationGroupNumber")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("GraduationInterviewQualificationDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActivityPolicyAgreed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDataPrivacyPolicyAgreed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDrMeetingQualifed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsGraduationInterviewQualifed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsLeadersCampQualifed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsMiniCampQualifed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsOmraWinner")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSocialMediaGroupsMember")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JoiningObjectives")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LeadersCampQualificationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("MaleRelativeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MaleRelativePhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<byte>("MaleRelativeRelation")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("MiniCampQualificationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NationalIdCopy")
                        .HasColumnType("TEXT");

                    b.Property<string>("NationalIdNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("OmraTravelDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("OmraWinDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte>("Position")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PreviousExperince")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ResalaGraduated")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ResidenceArea")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("University")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte>("VolunteerType")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("WorkingStatus")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CommitteeId");

                    b.ToTable("ResponsibleVolunteers");
                });

            modelBuilder.Entity("resala.core.Domain.Models.TrackRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("AttendedDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Expenses")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Hours")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsSettled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RecordPeriodDays")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RequiredInfo")
                        .HasColumnType("TEXT");

                    b.Property<int>("ResponsibleVolunteerId")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrackerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ResponsibleVolunteerId");

                    b.HasIndex("TrackerId");

                    b.ToTable("TrackRecords");
                });

            modelBuilder.Entity("resala.core.Domain.Models.Tracker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<byte>("Location")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("RequiredInfoHint")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Trackers");
                });

            modelBuilder.Entity("resala.core.Domain.Models.ResponsibleVolunteer", b =>
                {
                    b.HasOne("resala.core.Domain.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("resala.core.Domain.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("resala.core.Domain.Models.Committee", "Committee")
                        .WithMany()
                        .HasForeignKey("CommitteeId");

                    b.Navigation("Activity");

                    b.Navigation("Branch");

                    b.Navigation("Committee");
                });

            modelBuilder.Entity("resala.core.Domain.Models.TrackRecord", b =>
                {
                    b.HasOne("resala.core.Domain.Models.ResponsibleVolunteer", "Volunteer")
                        .WithMany()
                        .HasForeignKey("ResponsibleVolunteerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("resala.core.Domain.Models.Tracker", "Tracker")
                        .WithMany()
                        .HasForeignKey("TrackerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tracker");

                    b.Navigation("Volunteer");
                });
#pragma warning restore 612, 618
        }
    }
}
