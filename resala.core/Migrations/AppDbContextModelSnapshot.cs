// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using resala.core.Persistence.Contexts;

namespace resala.core.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.14");

            modelBuilder.Entity("resala.core.Domain.Models.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("resala.core.Domain.Models.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Branches");

                    b.HasData(
                        new
                        {
                            Id = 100,
                            Name = "Maadi",
                            Phone = "01111111111"
                        },
                        new
                        {
                            Id = 101,
                            Name = "October",
                            Phone = "02222222222"
                        });
                });

            modelBuilder.Entity("resala.core.Domain.Models.Committee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("FemaleCapacity")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("MaleCapacity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<ushort>("UniSexCapacity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Committee");
                });

            modelBuilder.Entity("resala.core.Domain.Models.ResponsibleVolunteer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("AcademicYear")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ActivityId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ActivityJoinDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("BranchId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CommitteeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DrMeetingQualificationDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("EducationalDegree")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ExitDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExitReason")
                        .HasColumnType("TEXT");

                    b.Property<string>("Faculty")
                        .HasColumnType("TEXT");

                    b.Property<string>("FemaleRelativeName")
                        .HasColumnType("TEXT");

                    b.Property<byte>("FemaleRelativeRelation")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FemalteRelativeNumber")
                        .HasColumnType("TEXT");

                    b.Property<byte>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Graduated")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("GraduationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("GraduationGroupNumber")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("GraduationInterviewQualificationDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActivityPolicyAgreed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDataPrivacyPolicyAgreed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDrMeetingQualifed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsGraduationInterviewQualifed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsLeadersCampQualifed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsMiniCampQualifed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsOmraWinner")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSocialMediaGroupsMember")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JoiningObjectives")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LeadersCampQualificationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("MaleRelativeName")
                        .HasColumnType("TEXT");

                    b.Property<string>("MaleRelativeNumber")
                        .HasColumnType("TEXT");

                    b.Property<byte>("MaleRelativeRelation")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("MiniCampQualificationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("NationalIdCopy")
                        .HasColumnType("TEXT");

                    b.Property<string>("NationalIdNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("OmraTravelDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("OmraWinDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<byte>("Position")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PreviousExperince")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ResalaGraduated")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ResidenceArea")
                        .HasColumnType("TEXT");

                    b.Property<string>("Specialization")
                        .HasColumnType("TEXT");

                    b.Property<string>("University")
                        .HasColumnType("TEXT");

                    b.Property<byte>("VolunteerType")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("WorkingStatus")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CommitteeId");

                    b.ToTable("ResponsibleVolunteer");

                    b.HasData(
                        new
                        {
                            Id = 100,
                            AcademicYear = (ushort)5,
                            ActivityJoinDate = new DateTime(2022, 4, 16, 2, 12, 17, 917, DateTimeKind.Local).AddTicks(2053),
                            DateOfBirth = new DateTime(2022, 4, 16, 2, 12, 17, 914, DateTimeKind.Local).AddTicks(605),
                            DrMeetingQualificationDate = new DateTime(2022, 4, 16, 2, 12, 17, 917, DateTimeKind.Local).AddTicks(1806),
                            EducationalDegree = 4,
                            Email = "test@test.com",
                            Faculty = "engineering",
                            FemaleRelativeName = "mother",
                            FemaleRelativeRelation = (byte)1,
                            FemalteRelativeNumber = "00000000000",
                            Gender = (byte)1,
                            Graduated = true,
                            GraduationDate = new DateTime(2022, 4, 16, 2, 12, 17, 916, DateTimeKind.Local).AddTicks(8892),
                            GraduationGroupNumber = "39",
                            GraduationInterviewQualificationDate = new DateTime(2022, 4, 16, 2, 12, 17, 917, DateTimeKind.Local).AddTicks(1353),
                            IsActivityPolicyAgreed = true,
                            IsDataPrivacyPolicyAgreed = true,
                            IsDrMeetingQualifed = true,
                            IsGraduationInterviewQualifed = true,
                            IsLeadersCampQualifed = true,
                            IsMiniCampQualifed = true,
                            IsOmraWinner = true,
                            IsSocialMediaGroupsMember = true,
                            JoiningObjectives = "blabla",
                            LeadersCampQualificationDate = new DateTime(2022, 4, 16, 2, 12, 17, 917, DateTimeKind.Local).AddTicks(902),
                            MaleRelativeName = "father",
                            MaleRelativeNumber = "00000000000",
                            MaleRelativeRelation = (byte)1,
                            MiniCampQualificationDate = new DateTime(2022, 4, 16, 2, 12, 17, 917, DateTimeKind.Local).AddTicks(443),
                            Name = "TestUser0",
                            NationalIdCopy = "ss/ss/ss.png",
                            NationalIdNumber = "11111111111111",
                            Notes = "asdfasdf",
                            OmraTravelDate = new DateTime(2022, 4, 16, 2, 12, 17, 916, DateTimeKind.Local).AddTicks(9964),
                            OmraWinDate = new DateTime(2022, 4, 16, 2, 12, 17, 916, DateTimeKind.Local).AddTicks(9617),
                            Phone = "00000000000",
                            Position = (byte)8,
                            PreviousExperince = "blabla",
                            ProfileImage = "/dd/dd/d.png",
                            ResalaGraduated = true,
                            ResidenceArea = "garden city",
                            Specialization = "comm",
                            University = "cairo",
                            VolunteerType = (byte)4,
                            WorkingStatus = (byte)1
                        });
                });

            modelBuilder.Entity("resala.core.Domain.Models.ResponsibleVolunteer", b =>
                {
                    b.HasOne("resala.core.Domain.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId");

                    b.HasOne("resala.core.Domain.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("resala.core.Domain.Models.Committee", "Committee")
                        .WithMany("Volunteers")
                        .HasForeignKey("CommitteeId");

                    b.Navigation("Activity");

                    b.Navigation("Branch");

                    b.Navigation("Committee");
                });

            modelBuilder.Entity("resala.core.Domain.Models.Committee", b =>
                {
                    b.Navigation("Volunteers");
                });
#pragma warning restore 612, 618
        }
    }
}
